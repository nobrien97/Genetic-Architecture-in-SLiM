	muts = applyValue.genomes.mutationsOfType(m3); 
	mutscount = size(muts); 
	phenotype[0] = (mutscount ? sum(muts.getValue("e0")) else 0.0) + (applyValue.sumOfMutationsOfType(m4) + fixedfx0); 
	phenotype[1] = (mutscount ? sum(muts.getValue("e1")) else 0.0) + (applyValue.sumOfMutationsOfType(m5) + fixedfx1); 
	phenotype[2] = (mutscount ? sum(muts.getValue("e2")) else 0.0) + (applyValue.sumOfMutationsOfType(m6) + fixedfx2); 
	phenotype[3] = (mutscount ? sum(muts.getValue("e3")) else 0.0) + (applyValue.sumOfMutationsOfType(m7) + fixedfx3); 
	phenotype[4] = (mutscount ? sum(muts.getValue("e4")) else 0.0) + (applyValue.sumOfMutationsOfType(m8) + fixedfx4); 
	phenotype[5] = (mutscount ? sum(muts.getValue("e5")) else 0.0) + (applyValue.sumOfMutationsOfType(m9) + fixedfx5); 
	phenotype[6] = (mutscount ? sum(muts.getValue("e6")) else 0.0) + (applyValue.sumOfMutationsOfType(m10) + fixedfx6);		
	phenotype[7] = (mutscount ? sum(muts.getValue("e7")) else 0.0) + (applyValue.sumOfMutationsOfType(m11) + fixedfx7); 
	applyValue.setValue("phenotype0", phenotype[0]); 
	applyValue.setValue("phenotype1", phenotype[1]); 
	applyValue.setValue("phenotype2", phenotype[2]); 
	applyValue.setValue("phenotype3", phenotype[3]); 
	applyValue.setValue("phenotype4", phenotype[4]); 
	applyValue.setValue("phenotype5", phenotype[5]); 
	applyValue.setValue("phenotype6", phenotype[6]); 
	applyValue.setValue("phenotype7", phenotype[7]); 
	effect = float(8); 
	for (i in phenotype) {	
		effect[match(i, phenotype)] = (dnorm(optima[match(i, phenotype)] - i, 0.0, abs(optima[match(i, phenotype)]) * wsd) * 10.0); 
	} 
	applyValue.fitnessScaling = 1.0 - s(exp(-(1/tau)*sum((optima - phenotype)^2)))
	phenotype;
	
	//new fitness effect
// f(i) = 1 - s(exp(-(1/tau) * sum((optimum - phenotype)^2)))
	1 - s(exp(-(1/tau)*sum((optima - phenotype)^2)))
	
	
1 + ((1-1*(1-exp(-(1/(tau*sumx2)) * sumx2))) * 10.0)
d_null <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/final_runs/Nimrod/Simplified/AIM1/Output/out_8T_null_means.csv", header = F)
View(d_null)
names(d_null)[1:6] <- c("gen", "seed", "modelindex", "rsd", "rwide", "delmu")
names(d_null)[7:34] <-  c(paste0("pleiocov_0", 1:7), paste0("pleiocov_1", 2:7), paste0("pleiocov_2", 3:7), paste0("pleiocov_3", 4:7), paste0("pleiocov_4", 5:7), paste0("pleiocov_5", 6:7), paste0("pleiocov_6", 7))
names(d_null)[35:42] <- paste0("mean", 0:7)
names(d_null)[43:50] <- paste0("var", 0:7)
names(d_null)[51:78] <- c(paste0("phenocov_0", 1:7), paste0("phenocov_1", 2:7), paste0("phenocov_2", 3:7), paste0("phenocov_3", 4:7), paste0("phenocov_4", 5:7), paste0("phenocov_5", 6:7), paste0("phenocov_6", 7))
names(d_null)[79:106] <- c(paste0("phenocor_0", 1:7), paste0("phenocor_1", 2:7), paste0("phenocor_2", 3:7), paste0("phenocor_3", 4:7), paste0("phenocor_4", 5:7), paste0("phenocor_5", 6:7), paste0("phenocor_6", 7))
names(d_null)[107] <- "H"
View(d_null)
nrow(unique(d_null[,c('seed', 'modelindex')]))
nrow(unique(d_null[d_null$gen == 150000][,c('seed', 'modelindex')]))
nrow(unique(d_null[,d_null$gen == 150000][,c('seed', 'modelindex')]))
nrow(unique(d_null[d_null$gen == 150000,][,c('seed', 'modelindex')]))
d_null$seed <- as.factor(d_null$seed)
nrow(unique(d_null[d_null$gen == 150000,][,c('seed', 'modelindex')]))
nrow(d_null$seed == unique(d_null$seed)[1] & d_null$modelindex == 197)
unique(d_null$seed)[1]
nrow(d_null$seed == '1140555014' & d_null$modelindex == 197)
nrow(d_null[d_null$seed == '1140555014' & d_null$modelindex == 197])
nrow(d_null[d_null$seed == '1140555014' & d_null$modelindex == 197,])
unique(d_null$seed)
nrow(unique(d_null$seed))
d_null$seed <- as.numeric(d_null$seed)
nrow(unique(d_null$seed))
d_null$seed
unique(d_null$seed)
length(unique(d_null$seed))
d_null <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/final_runs/Nimrod/Simplified/AIM1/Output/out_8T_null_means.csv", header = F)
names(d_null)[1:6] <- c("gen", "seed", "modelindex", "rsd", "rwide", "delmu")
names(d_null)[7:34] <-  c(paste0("pleiocov_0", 1:7), paste0("pleiocov_1", 2:7), paste0("pleiocov_2", 3:7), paste0("pleiocov_3", 4:7), paste0("pleiocov_4", 5:7), paste0("pleiocov_5", 6:7), paste0("pleiocov_6", 7))
names(d_null)[35:42] <- paste0("mean", 0:7)
names(d_null)[43:50] <- paste0("var", 0:7)
names(d_null)[51:78] <- c(paste0("phenocov_0", 1:7), paste0("phenocov_1", 2:7), paste0("phenocov_2", 3:7), paste0("phenocov_3", 4:7), paste0("phenocov_4", 5:7), paste0("phenocov_5", 6:7), paste0("phenocov_6", 7))
names(d_null)[79:106] <- c(paste0("phenocor_0", 1:7), paste0("phenocor_1", 2:7), paste0("phenocor_2", 3:7), paste0("phenocor_3", 4:7), paste0("phenocor_4", 5:7), paste0("phenocor_5", 6:7), paste0("phenocor_6", 7))
names(d_null)[107] <- "H"
nrow(unique(d_null[d_null$gen == 150000,][,c('seed', 'modelindex')]))
length(unique(d_null$seed)
)
unique(d_null$seed)
d_null$seed[1]
str(d_null$seed)
str(unique(d_null$seed))
length(unique(d_null$modelindex))
str(d_null$modelindex)
length(unique(as.integer(d_null$modelindex)))
is.integer(d_null$modelindex)
is.double(d_null$modelindex)
d_null_sbst <- d_null[1:20000,]
View(d_null_sbst)
is.double(d_null_sbst$modelindex)
length(unique(as.integer(d_null$modelindex)))
as.integer(d_null$modelindex[1])
as.integer(d_null$modelindex[2])
as.integer(unique(d_null$modelindex[1]))
as.integer(unique(d_null$modelindex[2]))
as.integer(unique(d_null$modelindex[3]))
as.integer(round(unique(d_null$modelindex)))
unique(d_null_sbst$modelindex)
as.integer(round(unique(d_null_sbst$modelindex)))
length(as.integer(round(unique(d_null_sbst$modelindex))))
d_null_sbst <- d_null[1:50000,]
length(as.integer(round(unique(d_null_sbst$modelindex))))
as.integer(round(unique(d_null_sbst$modelindex)))
str(d_null_sbst$modelindex)
d_null_sbst <- d_null[1:150000,]
length(as.integer(round(unique(d_null_sbst$modelindex))))
length(as.integer(round(unique(d_null_sbst$seed))))
d_null_sbst <- d_null[1:200000,]
length(as.integer(round(unique(d_null_sbst$modelindex))))
length(as.integer(round(unique(d_null_sbst$seed))))
as.integer(round(unique(d_null_sbst$seed)))
unique(d_null_sbst$seed)
as.integer(3992150825)
3992150825
str(3992150825)
as.integer(3992150825)
?integer
d_null_sbst$seed <- as.factor(d_null_sbst$seed)
unique(d_null_sbst$seed)
d_null_sbst <- d_null[1:500000,]
d_null_sbst$seed <- as.factor(d_null_sbst$seed)
unique(d_null_sbst$seed)
d_null_burn <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/final_runs/Nimrod/Simplified/AIM1/Output/out_8T_null_burnin.csv", header = F)
names(d_null_burn) <- c("gen", "seed", "modelindex", "H")
length(unique(d_null_burn$gen))
length(unique(d_null_burn$seed))
length(unique(d_null_burn$modelindex))
nrow(d_null) * ncol(d_null)
d_null <- data.table::fread("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/final_runs/Nimrod/Simplified/AIM1/Output/out_8T_null_means.csv", header = F)
View(d_null)
d_null <- data.table::fread("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/final_runs/Nimrod/Simplified/AIM1/Output/out_8T_null_means.csv", header = F, integer64="character")
View(d_null)
names(d_null)[1:6] <- c("gen", "seed", "modelindex", "rsd", "rwide", "delmu")
names(d_null)[7:34] <-  c(paste0("pleiocov_0", 1:7), paste0("pleiocov_1", 2:7), paste0("pleiocov_2", 3:7), paste0("pleiocov_3", 4:7), paste0("pleiocov_4", 5:7), paste0("pleiocov_5", 6:7), paste0("pleiocov_6", 7))
names(d_null)[35:42] <- paste0("mean", 0:7)
names(d_null)[43:50] <- paste0("var", 0:7)
names(d_null)[51:78] <- c(paste0("phenocov_0", 1:7), paste0("phenocov_1", 2:7), paste0("phenocov_2", 3:7), paste0("phenocov_3", 4:7), paste0("phenocov_4", 5:7), paste0("phenocov_5", 6:7), paste0("phenocov_6", 7))
names(d_null)[79:106] <- c(paste0("phenocor_0", 1:7), paste0("phenocor_1", 2:7), paste0("phenocor_2", 3:7), paste0("phenocor_3", 4:7), paste0("phenocor_4", 5:7), paste0("phenocor_5", 6:7), paste0("phenocor_6", 7))
names(d_null)[107] <- "H"
View(d_null)
?message
# Plot trait variances: how background selection affects populations within traits
var_plots <- vector('list', 8)
for (i in 0:7) {
message(i)
var_iter <- paste0("var", i, "_groupmean")
var_iterse <- paste0("var", i, "_se")
var_plots[[i]] <- local({
var_iter <- var_iter
var_iterse <- var_iterse
i <- i
ggplot(dplot_null_cat,
aes_string(x = "delmu.cat", y = var_iter)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes_string(ymin = paste(var_iter, '-', var_iterse), ymax = paste(var_iter, '+', var_iterse)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = paste0("Variance (Trait ", i, ")"))
})
rm(var_iter)
rm(var_iterse)
}
library(tidyverse)
for (i in 0:7) {
message(i)
var_iter <- paste0("var", i, "_groupmean")
var_iterse <- paste0("var", i, "_se")
var_plots[[i]] <- local({
var_iter <- var_iter
var_iterse <- var_iterse
i <- i
ggplot(dplot_null_cat,
aes_string(x = "delmu.cat", y = var_iter)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes_string(ymin = paste(var_iter, '-', var_iterse), ymax = paste(var_iter, '+', var_iterse)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = paste0("Variance (Trait ", i, ")"))
})
rm(var_iter)
rm(var_iterse)
}
source("src_plot.R")
View(dplot_null_cat)
colnames(dplot_null_cat[,2:9])
colnames(dplot_null_cat[2:9])
colnames(dplot_null_cat[1])
View(dplot_null_cat)
9+26
colnames(dplot_null_cat[35])
colnames(dplot_null_cat[39])
colnames(dplot_null_cat[47])
colnames(dplot_null_cat[45])
colnames(dplot_null_cat[46])
colnames(dplot_null_cat[39:46])
source("src_plot.R")
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]), columnse = colnames(dplot_null_cat[39:46]),
xlabel = "Background selection")
source("src_plot.R")
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
print(var_plots[[1]])
print(var_plots[[2]])
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]), columnse = colnames(dplot_null_cat[39:46]),
xlabel = "Background selection")
source("src_plot.R")
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]), columnse = colnames(dplot_null_cat[39:46]),
xlabel = "Background selection")
SEs <- colnames(dplot_null_cat[39:46])
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]), columnse = SEs,
xlabel = "Background selection")
vars_names <- matrix(c(colnames(dplot_null_cat[2:9]), colnames(dplot_null_cat[39:46])), nrow = 8)
vars_names
vars_names <- matrix(c(colnames(dplot_null_cat[2:9]), colnames(dplot_null_cat[39:46])), nrow = 8, bycol = T)
vars_names <- matrix(c(colnames(dplot_null_cat[2:9]), colnames(dplot_null_cat[39:46])), nrow = 8, byrow = T)
vars_names
vars_names <- matrix(c(colnames(dplot_null_cat[2:9]), colnames(dplot_null_cat[39:46])), nrow = 8, byrow = F)
vars_names
source("src_plot.R")
var_plots <- lapply(vars_names, plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
?apply
var_plots <- apply(vars_names, 1, plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
?mapply
vars_names <- matrix(c(colnames(dplot_null_cat[2:9]), colnames(dplot_null_cat[39:46])), nrow = 8, byrow = F)
var_plots <- mapply(FUN = plot_data_column, vars_names, MoreArgs = list(data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection"))
source("src_plot.R")
var_plots <- mapply(FUN = plot_data_column, column = colnames(dplot_null_cat[2:9]), columnse = colnames(dplot_null_cat[39:46]), MoreArgs = list(data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection"))
print(var_plots[[1]])
var_plots[[1]]
var_plots[1]
print(var_plots[1])
print(var_plots[1])
source("src_plot.R")
var_plots <- lapply(vars_names, plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
var_plots[[1]]
var_plots[1]
source("src_plot.R")
var_plots <- lapply(vars_names, plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
var_plots[[1]]
var_plots[[2]]
var_plots[[8]]
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
var_plots[[1]]
View(d_null)
dplot_nullcov_cat <- d_null[,c(108, 51:78, 107)] %>%
group_by(delmu.cat) %>%
summarise_all(list(groupmean = mean, se = std.error))
View(dplot_nullcov_cat)
dplot_nullcov_cat <- d_null[,c(108, 51:78)] %>%
group_by(delmu.cat) %>%
summarise_all(list(groupmean = mean, se = std.error))
colnames(dplot_nullcov_cat[28])
colnames(dplot_nullcov_cat[29])
colnames(dplot_nullcov_cat[30])
View(dplot_null_cat)
colnames(dplot_null_cat[10])
colnames(dplot_null_cat[37])
cov_plots <- lapply(colnames(dplot_null_cat[10:37]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
cov_plots[[1]]
cov_plots[[2]]
cov_plots[[3]]
cov_plots[[16]]
colnames(dplot_null_cat[38])
het_plot <-  ggplot(dplot_null_cat, aes_string(x = delmu.cat, y = H_groupmean)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes_string(ymin = paste(H_groupmean, '-', H_se), ymax = paste(H_groupmean, '+', H_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
het_plot <-  ggplot(dplot_null_cat, aes(x = delmu.cat, y = H_groupmean)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes_string(ymin = paste(H_groupmean, '-', H_se), ymax = paste(H_groupmean, '+', H_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
het_plot <-  ggplot(dplot_null_cat, aes(x = delmu.cat, y = H_groupmean)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes(ymin = H_groupmean - H_se, ymax = H_groupmean + H_se), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
het_plot
# Cut delmu into a categorical variable: have to do this to average out effects of other parameters, which are approximately uniformally distributed in any given bin of delmu
d_null$delmu.cat <- cut(d_null$delmu, breaks = 8)
# Get means and standard errors of data for plotting variance
dplot_null_cat <- d_null[,c(108, 43:78, 107)] %>%
group_by(delmu.cat) %>%
summarise_all(list(groupmean = mean, se = std.error))
dplot_null <- d_null[,c(6, 43:78, 107)] %>%
group_by(delmu) %>%
summarise_all(list(groupmean = mean, se = std.error))
rm(dplot_nullcov_cat)
var_plots <- lapply(colnames(dplot_null_cat[2:9]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
var_plots[[1]]
cov_plots <- lapply(colnames(dplot_null_cat[10:37]), plot_data_column, data = dplot_null_cat,
x_dat = colnames(dplot_null_cat[1]),
xlabel = "Background selection")
het_plot <-  ggplot(dplot_null_cat, aes(x = delmu.cat, y = H_groupmean)) +
geom_col(fill = "white", colour = "black") +
geom_errorbar(aes(ymin = H_groupmean - H_se, ymax = H_groupmean + H_se), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
het_plot
source("src_G_mat.R")
source("src_plot.R")
Het_line <- ggplot(dplot_null_cat, aes(x = delmu.cat, y = H_groupmean)) +
geom_line() +
geom_errorbar(aes(ymin = H_groupmean - H_se, ymax = H_groupmean + H_se), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
Het_line
Het_line <- ggplot(dplot_null_cat, aes(x = delmu.cat, y = H_groupmean)) +
geom_path() +
geom_errorbar(aes(ymin = H_groupmean - H_se, ymax = H_groupmean + H_se), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "Background selection", y = "Genome-wide heterozygosity")
Het_line
rm(Het_line)

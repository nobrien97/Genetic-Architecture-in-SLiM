geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 rate of pleiotropy between comparison models", y = "Mean pairwise log generalised variance between models")
box_logGV_btwn_ex_pleiorate <- ggplot(d_relG_btwn_ex_pleiorate, aes(x = pleiorate.cat, y = logGV, fill = pleiorate.cat)) +
geom_violin() +
scale_fill_manual(values = c("paleturquoise", "royalblue")) +
#  geom_boxplot(color = c("maroon", "royalblue"), alpha = 0.6, position = 'identity') +
geom_errorbar(
mapping =
aes(x = pleiorate.cat,
y = logGV_groupmean,
group = 1,
ymin = (logGV_groupmean - (1.96*logGV_se)),
ymax = (logGV_groupmean + (1.96*logGV_se))
),
width = 0.05,
data = dplot_relG_btwn_ex_pleiorate,
inherit.aes = FALSE) +
theme_classic() +
theme(legend.position = "none") +
scale_x_discrete(labels = c("Small", "Large")) +
labs(x = "\u0394 pleiotropy rates", y = "Log generalised variance between groups")
# Plot
plot_logGV_btwn_ex_rwide <- ggplot(dplot_relG_btwn_ex_rwide, aes(x = rwide.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 genome-wide recombination rate between comparison models", y = "Mean pairwise log generalised variance between models")
box_logGV_btwn_ex_rwide <- ggplot() +
geom_violin(data = d_relG_btwn_ex_rwide, aes(x = rwide.cat, y = logGV, fill = rwide.cat)) +
scale_fill_manual(values = c("paleturquoise", "royalblue")) +
#  geom_boxplot(color = c("maroon", "royalblue"), alpha = 0.6, position = 'identity') +
geom_point(data = dplot_relG_btwn_ex_rwide, aes(x = rwide.cat, y = logGV_groupmean, group = 1)) +
geom_errorbar(
mapping =
aes(x = rwide.cat,
y = logGV_groupmean,
group = 1,
ymin = (logGV_groupmean - (1.96*logGV_se)),
ymax = (logGV_groupmean + (1.96*logGV_se))
),
width = 0.05,
data = dplot_relG_btwn_ex_rwide,
inherit.aes = FALSE) +
theme_classic() +
theme(legend.position = "none") +
scale_x_discrete(labels = c("Small", "Large")) +
labs(x = "\u0394 recombination rates", y = "Log generalised variance between groups")
# Plot
plot_logGV_btwn_ex_locisigma <- ggplot(dplot_relG_btwn_ex_locisigma, aes(x = locisigma.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 additive effect size variance between comparison models", y = "Mean pairwise log generalised variance between models")
box_logGV_btwn_ex_locisigma <- ggplot(d_relG_btwn_ex_locisigma, aes(x = locisigma.cat, y = logGV, fill = locisigma.cat)) +
geom_violin() +
scale_fill_manual(values = c("paleturquoise", "royalblue")) +
#  geom_boxplot(color = c("maroon", "royalblue"), alpha = 0.6, position = 'identity') +
geom_errorbar(
mapping =
aes(x = locisigma.cat,
y = logGV_groupmean,
group = 1,
ymin = (logGV_groupmean - (1.96*logGV_se)),
ymax = (logGV_groupmean + (1.96*logGV_se))
),
width = 0.05,
data = dplot_relG_btwn_ex_locisigma,
inherit.aes = FALSE) +
theme_classic() +
theme(legend.position = "none") +
scale_x_discrete(labels = c("Small", "Large")) +
labs(x = "\u0394 additive effect sizes", y = "Log generalised variance between groups")
(box_logGV_btwn_ex_delmu | box_logGV_btwn_ex_pleiocov | box_logGV_btwn_ex_pleiorate) / (box_logGV_btwn_ex_rwide | box_logGV_btwn_ex_locisigma)
box_logGV_btwn_ex_delmu <- ggplot(d_relG_btwn_ex_delmu, aes(x = delmu.cat, y = logGV, fill = delmu.cat)) +
geom_violin() +
scale_fill_manual(values = c("paleturquoise", "royalblue")) +
#  geom_boxplot(color = c("lightgrey"), alpha = 0.6, position = 'identity') +
geom_errorbar(
mapping =
aes(x = delmu.cat,
y = logGV_groupmean,
group = 1,
ymin = (logGV_groupmean - (1.96*logGV_se)),
ymax = (logGV_groupmean + (1.96*logGV_se))
),
width = 0.05,
data = dplot_relG_btwn_ex_delmu,
inherit.aes = FALSE) +
theme_classic() +
theme(legend.position = "none") +
scale_x_discrete(labels = c("Small", "Large")) +
labs(x = "\u0394 Background selection", y = "Log generalised variance between groups")
# Plot
plot_logGV_btwn_ex_delmu <- ggplot(dplot_relG_btwn_ex_delmu, aes(x = delmu.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 background selection between comparison models", y = "Mean pairwise log generalised variance between models")
(plot_logGV_btwn_ex_delmu | plot_logGV_btwn_ex_pleiocov | plot_logGV_btwn_ex_pleiorate) / (plot_logGV_btwn_ex_rwide | plot_logGV_btwn_ex_locisigma)
# Plot
plot_logGV_btwn_ex_delmu <- ggplot(dplot_relG_btwn_ex_delmu, aes(x = delmu.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 background selection between comparison models", y = "Mean pairwise log generalised variance")
dens_logGV_btwn_ex_delmu <- ggplot(d_relG_btwn_ex_delmu, aes(x = logGV, fill = delmu.cat)) +
geom_density(color = "blue", alpha = 0.6, position = 'identity') +
#  geom_line(stat = StatNormalDensity, size = 1) +
theme_classic() +
scale_fill_manual(values = c("royalblue", "seagreen2")) +
labs(x = "Log generalised variance between groups", fill = "\u0394 Deleterious mutation rate")
dens_logGV_btwn_ex_delmu
dens_logGV_btwn_ex_pleiocov <- ggplot(d_relG_btwn_ex_pleiocov, aes(x = logGV, fill = pleiocov.cat)) +
geom_density(color = "blue", alpha = 0.6, position = 'identity') +
theme_classic() +
scale_fill_manual(values = c("royalblue", "seagreen2")) +
labs(x = "Log generalised variance between groups", fill = "\u0394 Pleiotropic covariance")
dens_logGV_btwn_ex_pleiorate <- ggplot(d_relG_btwn_ex_pleiorate, aes(x = logGV, fill = pleiorate.cat)) +
geom_density(color = "blue", alpha = 0.6, position = 'identity') +
theme_classic() +
scale_fill_manual(values = c("royalblue", "seagreen2")) +
labs(x = "Log generalised variance between groups", fill = "\u0394 Rate of pleiotropy")
dens_logGV_btwn_ex_rwide <- ggplot(d_relG_btwn_ex_rwide, aes(x = logGV, fill = rwide.cat)) +
geom_density(color = "blue", alpha = 0.6, position = 'identity') +
theme_classic() +
scale_fill_manual(values = c("royalblue", "seagreen2")) +
labs(x = "Log generalised variance between groups", fill = "\u0394 Recombination rate")
dens_logGV_btwn_ex_locisigma <- ggplot(d_relG_btwn_ex_locisigma, aes(x = logGV, fill = locisigma.cat)) +
geom_density(color = "blue", alpha = 0.6, position = 'identity') +
theme_classic() +
scale_fill_manual(values = c("royalblue", "seagreen2")) +
labs(x = "Log generalised variance between groups", fill = "\u0394 Additive effect size")
(dens_logGV_btwn_ex_delmu | dens_logGV_btwn_ex_pleiocov | dens_logGV_btwn_ex_pleiorate) / (dens_logGV_btwn_ex_rwide | dens_logGV_btwn_ex_locisigma)
aov_logGV_btwn <- aov(logGV ~ (delmudiff + pleioratediff + pleiocovdiff + rwidediff + locisigmadiff)^2, d_relG_btwn)
save.image("/mnt/z/Documents/GitHub/Genetic-Architecture-in-SLiM/src/R/final_runs/Nimrod/Simplified/AIM1/AIM-1_R/online_work.RData")
View(d_G_El)
View(d_G_El_delmu)
d_G_El_delmu <- arrange(d_G_El_delmu, seed, delmu)
d_null <- arrange(d_null, seed, delmu)
d_G_El <- d_G_El_delmu
d_G_El$pleiocov <- d_null$pleiocov
d_G_El$pleiorate <- d_null$pleiorate
d_G_El$locisigma <- d_null$locisigma
d_G_El$rwide <- d_null$rwide
d_G_El <- d_G_El[c(1:3, 15:18, 4:14)]
View(d_G_El)
# Categorise values for plotting
d_G_El$pleiocov.cat <- cut(d_G_El$pleiocov, breaks = 8)
d_G_El$pleiorate.cat <- cut(d_G_El$pleiorate, breaks = 8)
d_G_El$locisigma.cat <- cut(d_G_El$locisigma, breaks = 8)
d_G_El$rwide.cat <- cut(d_G_El$rwide, breaks = 8)
# Rearrange columns
d_G_El <- d_G_El[c(1:4, 19, 5, 20, 6, 21, 7, 22, 8:18)]
lm_area_El <- lm(area ~ (delmu.cat, pleiocov.cat, pleiorate.cat, locisigma.cat, rwide)^2, data = d_G_El)
lm_area_El <- lm(area ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide)^2, data = d_G_El)
summary(lm_area_El)
lm_area_El <- lm(area ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, data = d_G_El)
summary(lm_area_El)
aov_area_El <- aov(area ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, data = d_G_El)
summary.aov(aov_area_El)
aov_area_El <- aov(area ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_G_El)
summary.aov(aov_area_El)
lm_ratio_El <- lm(ratio ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, data = d_G_El)
aov_ratio_El <- aov(ratio ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_G_El)
summary(lm_ratio_El)
summary.aov(aov_ratio_El)
lm_angle_El <- lm(theta ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, data = d_G_El)
aov_angle_El <- aov(theta ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_G_El)
summary(lm_angle_El)
aov_angle_El <- aov(theta ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_G_El)
summary.aov(aov_angle_El)
man_El <- manova(cbind(area, ratio, theta) ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_G_El)
summary.aov(man_El)
View(d_null_big)
d_null[1,111]
d_null_het <- d_null_big[1:3, 5:10, 111]
View(d_null_het)
d_null_het <- d_null_big[,c(1:3, 5:10, 111)]
View(d_null_het)
d_null_het$pleiocov.cat <- cut(d_null_het$pleiocov, breaks = 8)
d_null_het$pleiorate.cat <- cut(d_null_het$pleiorate, breaks = 8)
d_null_het$delmu.cat <- cut(d_null_het$delmu, breaks = 8)
d_null_het$locisigma.cat <- cut(d_null_het$locisigma, breaks = 8)
lm_het <- lm(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, data = d_null_het)
aov_het <- aov(H ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_null_het)
d_null_het$rwide.cat <- cut(d_null_het$rwide, breaks = 8)
aov_het <- aov(H ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_null_het)
summary(lm_angle_El)
summary.aov(aov_angle_El)
summary(lm_het_El)
summary(lm_het)
d_null_het$delmu2 <- d_null_het$delmu^2
View(d_null_het)
lm_het <- lm(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 + delmu2, data = d_null_het)
summary(lm_het)
1.185e+02
lm_het <- lm(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_het)
summary(lm_het)
-1.371e-01
1e-4
1e-04
1e-02
1e-03
d_null_big[1,25]
d_null_big[1,25:33]
d_null_big[1,15:20]
d_null_big[1,9:18]
d_null_big[1,50]
d_null_big[1,50:51]
d_null_big[1,47:54]
d_null_var <- d_null_big[,c(1:3, 5:10, 47:54)]
d_null_var <- d_null_big[,c(1:3, 5:10, 47)]
lm_var <- lm(var0 ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_var)
d_null_big[1,60]
d_null_big[1,60:61]
d_null_big[1,55:61]
d_null_cov <- d_null_big[,c(1:3, 5:10, 55)]
lm_cov <- lm(phenocov_01 ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_cov)
summary(lm_var)
summary(lm_cov)
d_null_var[1,]
lm_var <- lm(var0 ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_var)
summary(lm_var)
View(d_null_var)
install.packages("jtools")
install.packages("jtools")
# Tests for linear model reliability
library(jtools)
plot_summs(lm_het, scale = T, plot.distributions = T)
install.packages("ggstance")
plot_summs(lm_het, scale = T, plot.distributions = T)
plot_summs(lm_het, coefs = "delmu", scale = T, plot.distributions = T)
install.packages("broom.mixed")
library(broom.mixed) # also for plot_summs()
plot_summs(lm_het, coefs = "delmu", scale = T, plot.distributions = T)
plot_summs(lm_het, robust = "HC3", coefs = coef_names, plot.distributions = TRUE)
install.packages("sandwich")
library(sandwich)
plot_summs(lm_het, robust = "HC3", coefs = coef_names, plot.distributions = TRUE)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE, rescale.distributions = T)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE, scale = T)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = F)
plot_summs(lm_het, robust = "HC3", plot.distributions = TRUE, scale = F, rescale.distributions = T)
plot_summs(lm_het, coefs = c("rwide", "delmu", "locisigma", "pleiocov", "pleiorate"), robust = "HC3", plot.distributions = TRUE, scale = F, rescale.distributions = T)
plot_summs(lm_het, coefs = c("rwide", "delmu", "locisigma", "pleiocov", "pleiorate"), robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, coefs = c("delmu", "locisigma", "pleiocov", "pleiorate"), robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, coefs = c("locisigma", "pleiocov", "pleiorate"), robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, coefs = c("delmu"), robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, coefs = c("rwide"), robust = "HC3", plot.distributions = TRUE, scale = T, rescale.distributions = T)
plot_summs(lm_het, coefs = c("rwide"), robust = "HC3", plot.distributions = TRUE, scale = F, rescale.distributions = T)
plot_summs(lm_het, coefs = c("delmu"), robust = "HC3", plot.distributions = TRUE, scale = F, rescale.distributions = T)
summary(lm_var)
effect_plot(lm_var, pred = delmu, interval = TRUE, plot.points = TRUE)
effect_plot(lm_var, pred = delmu, interval = TRUE)
effect_plot(lm_cov, pred = delmu, interval = TRUE, plot.points = TRUE)
effect_plot(lm_cov, pred = delmu, interval = TRUE, plot.points = FALSE)
effect_plot(lm_var, pred = delmu, interval = TRUE, plot.points = FALSE)
effect_plot(lm_var, pred = rwide, interval = TRUE, plot.points = FALSE)
effect_plot(lm_het, pred = delmu, interval = TRUE, plot.points = FALSE)
lm_var <- lm(var0 ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_var)
effect_plot(lm_var, pred = delmu, interval = TRUE, plot.points = FALSE)
summary(lm_var)
effect_plot(lm_var, pred = pleiocov, interval = TRUE, plot.points = FALSE)
effect_plot(lm_var, pred = pleiorate, interval = TRUE, plot.points = FALSE)
effect_plot(lm_var, pred = delmu, interval = TRUE, plot.points = FALSE)
effect_plot(lm_var, pred = delmu:rwide, interval = TRUE, plot.points = FALSE)
qqnorm(lm_var)
library(car)
qqPlot(rstandard(lm_var))
qqPlot(lm_var)
plot(delmu ~ var0, data = d_null_var)
abline(lm_var)
abline(lm_var, col = "red")
plot(delmu ~ var0, data = d_null_var) +
abline(lm_var, col = "red")
lm_var <- lm(var0 ~ (delmu) , data = d_null_var)
summary(lm_var)
plot(delmu ~ var0, data = d_null_var) +
abline(lm_var, col = "red")
plot(delmu ~ var0, data = d_null_var) +
abline(lm_var, col = "red")
plot(delmu ~ var0, data = d_null_var)
abline(lm_var, col = "red")
d_null_var <- d_null_big[,c(1:3, 5:10, 47)]
View(d_null_var)
lm_var <- lm(var0 ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2 , data = d_null_var)
summary(lm_var)
install.packages("lme4")
summary.aov(aov_area_El)
summary(lm_area_El)
lm_var <- lm(var0 ~ delmu.cat + pleiorate.cat + locisigma.cat + rwide.cat, data = d_null_var_norm)
library(BBmisc)
d_null_var_norm <- cbind(d_null_var[c(1:3)], normalize(d_null_var[-c(1:3, 10)], method = "range"), d_null_var[10])
d_null_var_norm$seed <- factor(d_null_var_norm$seed)
lm_var <- lm(var0 ~ delmu.cat + pleiorate.cat + locisigma.cat + rwide.cat, data = d_null_var_norm)
d_null_var$pleiocov.cat <- cut(d_null_var$pleiocov, breaks = 8)
d_null_var$pleiorate.cat <- cut(d_null_var$pleiorate, breaks = 8)
d_null_var$rwide.cat <- cut(d_null_var$rwide, breaks = 8)
d_null_var$locisigma.cat <- cut(d_null_var$locisigma, breaks = 8)
d_null_var_norm <- cbind(d_null_var[c(1:3)], normalize(d_null_var[-c(1:3, 10)], method = "range"), d_null_var[10])
d_null_var_norm$seed <- factor(d_null_var_norm$seed)
lm_var <- lm(var0 ~ delmu.cat + pleiorate.cat + locisigma.cat + rwide.cat, data = d_null_var_norm)
summary(lm_var)
lm_var <- lm(var0 ~ (delmu.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2, data = d_null_var_norm)
summary(lm_var)
plot_summs(lm_het, coefs = c("delmu"), robust = "HC3", plot.distributions = TRUE, scale = F, rescale.distributions = T)
t.test(logGV ~ delmu.cat, data = d_relG_btwn_ex_delmu)
d_relG_btwn_aov <- d_relG_btwn
View(d_relG_btwn_delmu)
View(d_null_var)
d_relG_btwn_aov$delmu.cat <- cut(d_relG_btwn_aov$delmudiff, breaks = c(0.25, 0.875))
View(d_relG_btwn_aov)
d_relG_btwn_aov$delmu.cat <- cut(d_relG_btwn_aov$delmudiff, breaks = c("0.25", "0.875"))
View(d_relG_btwn_aov)
d_relG_btwn_aov$delmu.cat <- cut(d_relG_btwn_aov$delmudiff, breaks = c(0.25, 0.875))
d_relG_btwn_aov$delmu.cat <- cut(d_relG_btwn_aov$delmudiff, breaks = c(0.125, 0.875))
d_relG_btwn_aov$delmu.cat <- cut(d_relG_btwn_aov$delmudiff, breaks = c(0.0, 0.125, 0.875, 1.0))
unique(d_relG_btwn$rwide.cat)
View(d_G_El)
unique(d_relG_El$rwide.cat)
unique(d_G_El$rwide.cat)
d_relG_btwn_aov$rwide.cat <- cut(d_relG_btwn_aov$rwidediff, breaks = c(0.0, 2.14e-05, 0.000104, 0.000117))
unique(d_relG_El$pleiocov.cat)
unique(d_G_El$pleiocov.cat)
d_relG_btwn_aov$pleiocov.cat <- cut(d_relG_btwn_aov$pleiocovdiff, breaks = c(0.0, 0.0859, 0.415, 0.5))
unique(d_G_El$pleiorate.cat)
d_relG_btwn_aov$pleiorate.cat <- cut(d_relG_btwn_aov$pleioratediff, breaks = c(0.0, 0.078, 0.409, 0.5))
unique(d_G_El$locisigma.cat)
d_relG_btwn_aov$locisigma.cat <- cut(d_relG_btwn_aov$locisigmadiff, breaks = c(0.1, 1.58, 8.25, 10))
lm_logGV_cat_btwn <- lm(logGV ~ (delmu.cat + pleiocov.cat + pleiorate.cat + rwide.cat + locisigma.cat), data = d_relG_btwn_aov)
summary(lm_logGV_cat_btwn)
plot_logGV_btwn_ex_delmu
(plot_logGV_btwn_ex_delmu | plot_logGV_btwn_ex_pleiocov | plot_logGV_btwn_ex_pleiorate) / (plot_logGV_btwn_ex_rwide | plot_logGV_btwn_ex_locisigma)
library(patchwork)
(plot_logGV_btwn_ex_delmu | plot_logGV_btwn_ex_pleiocov | plot_logGV_btwn_ex_pleiorate) / (plot_logGV_btwn_ex_rwide | plot_logGV_btwn_ex_locisigma)
# Plot
plot_logGV_btwn_ex_pleiocov <- ggplot(dplot_relG_btwn_ex_pleiocov, aes(x = pleiocov.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 mutational pleiotropic covariance", y = "Mean pairwise log generalised variance")
library(tidyverse)
# Plot
plot_logGV_btwn_ex_pleiocov <- ggplot(dplot_relG_btwn_ex_pleiocov, aes(x = pleiocov.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 mutational pleiotropic covariance", y = "Mean pairwise log generalised variance")
# Plot
plot_logGV_btwn_ex_pleiorate <- ggplot(dplot_relG_btwn_ex_pleiorate, aes(x = pleiorate.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 rate of pleiotropy between comparison models", y = "Mean pairwise log generalised variance")
# Plot
plot_logGV_btwn_ex_rwide <- ggplot(dplot_relG_btwn_ex_rwide, aes(x = rwide.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 genome-wide recombination rate between comparison models", y = "Mean pairwise log generalised variance")
# Plot
plot_logGV_btwn_ex_locisigma <- ggplot(dplot_relG_btwn_ex_locisigma, aes(x = locisigma.cat, y = logGV_groupmean, group = 1)) +
geom_col() +
geom_errorbar(aes(ymin = logGV_groupmean - (1.96*logGV_se), ymax = logGV_groupmean + (1.96*logGV_se)), width = 0.2) +
theme_classic() +
theme(legend.position = "none") +
labs(x = "\u0394 additive effect size variance between comparison models", y = "Mean pairwise log generalised variance")
(plot_logGV_btwn_ex_delmu | plot_logGV_btwn_ex_pleiocov | plot_logGV_btwn_ex_pleiorate) / (plot_logGV_btwn_ex_rwide | plot_logGV_btwn_ex_locisigma)
t.test(logGV ~ delmu.cat, data = d_relG_btwn_ex_delmu)
t.test(logGV ~ rwide.cat, data = d_relG_btwn_ex_rwide)
t.test(logGV ~ pleiorate.cat, data = d_relG_btwn_ex_pleiorate)
t.test(logGV ~ pleiocov.cat, data = d_relG_btwn_ex_pleiocov)
t.test(logGV ~ locisigma.cat, data = d_relG_btwn_ex_locisigma)
t.test(logGV ~ rwide.cat, data = d_relG_btwn_ex_rwide)
ks.test(d_relG_btwn$logGV[d_relG_btwn$delmu.cat == sort(unique(d_relG_btwn$delmu.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$delmu.cat == sort(unique(d_relG_btwn$delmu.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$rwide.cat == sort(unique(d_relG_btwn$rwide.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$rwide.cat == sort(unique(d_relG_btwn$rwide.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$pleiocov.cat == sort(unique(d_relG_btwn$pleiocov.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$pleiocov.cat == sort(unique(d_relG_btwn$pleiocov.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$pleiorate.cat == sort(unique(d_relG_btwn$pleiorate.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$pleiorate.cat == sort(unique(d_relG_btwn$pleiorate.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$locisigma.cat == sort(unique(d_relG_btwn$locisigma.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$locisigma.cat == sort(unique(d_relG_btwn$locisigma.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$delmu.cat == sort(unique(d_relG_btwn$delmu.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$delmu.cat == sort(unique(d_relG_btwn$delmu.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$rwide.cat == sort(unique(d_relG_btwn$rwide.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$rwide.cat == sort(unique(d_relG_btwn$rwide.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$pleiocov.cat == sort(unique(d_relG_btwn$pleiocov.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$pleiocov.cat == sort(unique(d_relG_btwn$pleiocov.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$pleiorate.cat == sort(unique(d_relG_btwn$pleiorate.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$pleiorate.cat == sort(unique(d_relG_btwn$pleiorate.cat))[8]])
ks.test(d_relG_btwn$logGV[d_relG_btwn$locisigma.cat == sort(unique(d_relG_btwn$locisigma.cat))[1]], d_relG_btwn$logGV[d_relG_btwn$locisigma.cat == sort(unique(d_relG_btwn$locisigma.cat))[8]])
View(d_relG_btwn_delmu)
View(d_G_El)
d_G_El_aov <- d_G_El
d_G_El_aov$delmu.cat <- cut(d_G_El_aov$delmu, breaks = 3)
d_G_El_aov$pleiocov.cat <- cut(d_G_El_aov$pleiocov, breaks = 3)
d_G_El_aov$pleiorate.cat <- cut(d_G_El_aov$pleiorate, breaks = 3)
d_G_El_aov$rwide.cat <- cut(d_G_El_aov$rwide, breaks = 3)
d_G_El_aov$locisigma.cat <- cut(d_G_El_aov$locisigma, breaks = 3)
library(car)
library(emmeans)
lm_El_area <- lm(area ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2 ,
contrasts=list(delmu.cat='contr.sum', pleiocov.cat ='contr.sum', pleiorate.cat ='contr.sum', locisigma.cat ='contr.sum', rwide.cat ='contr.sum', tau.cat ='contr.sum'),
data = d_G_El_aov)
lm_El_area <- lm(area ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2 ,
contrasts=list(delmu.cat='contr.sum', pleiocov.cat ='contr.sum', pleiorate.cat ='contr.sum', locisigma.cat ='contr.sum', rwide.cat ='contr.sum'),
data = d_G_El_aov)
aov_El_area <- Anova(lm_El_area, type = 3)
lm_El_ratio <- lm(ratio ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2 ,
contrasts=list(delmu.cat='contr.sum', pleiocov.cat ='contr.sum', pleiorate.cat ='contr.sum', locisigma.cat ='contr.sum', rwide.cat ='contr.sum'),
data = d_G_El_aov)
aov_El_ratio <- Anova(lm_El_ratio, type = 3)
lm_El_theta <- lm(theta ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat + tau.cat)^2 ,
contrasts=list(delmu.cat='contr.sum', pleiocov.cat ='contr.sum', pleiorate.cat ='contr.sum', locisigma.cat ='contr.sum', rwide.cat ='contr.sum'),
data = d_G_El_aov)
lm_El_theta <- lm(theta ~ (delmu.cat + pleiocov.cat + pleiorate.cat + locisigma.cat + rwide.cat)^2 ,
contrasts=list(delmu.cat='contr.sum', pleiocov.cat ='contr.sum', pleiorate.cat ='contr.sum', locisigma.cat ='contr.sum', rwide.cat ='contr.sum'),
data = d_G_El_aov)
aov_El_theta <- Anova(lm_El_theta, type = 3)
aov_El_area
aov_El_ratio
aov_El_theta
emm_area_d.pr <- emmeans(lm_El_area, pairwise ~ delmu.cat | pleiorate.cat)
emm_area_d.pc <- emmeans(lm_El_area, pairwise ~ delmu.cat | pleiocov.cat)
emm_area_d.r <- emmeans(lm_El_area, pairwise ~ delmu.cat | rwide.cat)
emm_area_d.ls <- emmeans(lm_El_area, pairwise ~ delmu.cat | locisigma.cat)
emm_area_r.pc <- emmeans(lm_El_area, pairwise ~ rwide.cat | pleiocov.cat)
emm_area_r.pr <- emmeans(lm_El_area, pairwise ~ rwide.cat | pleiorate.cat)
emm_area_r.ls <- emmeans(lm_El_area, pairwise ~ rwide.cat | locisigma.cat)
emm_area_pr.pc <- emmeans(lm_El_area, pairwise ~ pleiorate.cat | rwide.cat)
emm_area_pr.ls <- emmeans(lm_El_area, pairwise ~ pleiorate.cat | locisigma.cat)
# Ratio post-hoc
emm_ratio_d.pc <- emmeans(lm_El_ratio, pairwise ~ delmu.cat | pleiocov.cat)
emm_ratio_d.pr <- emmeans(lm_El_ratio, pairwise ~ delmu.cat | pleiorate.cat)
emm_ratio_d.r <- emmeans(lm_El_ratio, pairwise ~ delmu.cat | rwide.cat)
emm_ratio_d.ls <- emmeans(lm_El_ratio, pairwise ~ delmu.cat | locisigma.cat)
emm_ratio_r.pc <- emmeans(lm_El_ratio, pairwise ~ rwide.cat | pleiocov.cat)
emm_ratio_r.pr <- emmeans(lm_El_ratio, pairwise ~ rwide.cat | pleiorate.cat)
emm_ratio_r.ls <- emmeans(lm_El_ratio, pairwise ~ rwide.cat | locisigma.cat)
emm_ratio_pr.pc <- emmeans(lm_El_ratio, pairwise ~ pleiorate.cat | rwide.cat)
emm_ratio_pr.ls <- emmeans(lm_El_ratio, pairwise ~ pleiorate.cat | locisigma.cat)
# Theta post-hoc
emm_theta_d.pc <- emmeans(lm_El_theta, pairwise ~ delmu.cat | pleiocov.cat)
emm_theta_d.pr <- emmeans(lm_El_theta, pairwise ~ delmu.cat | pleiorate.cat)
emm_theta_d.r <- emmeans(lm_El_theta, pairwise ~ delmu.cat | rwide.cat)
emm_theta_d.ls <- emmeans(lm_El_theta, pairwise ~ delmu.cat | locisigma.cat)
emm_theta_r.pc <- emmeans(lm_El_theta, pairwise ~ rwide.cat | pleiocov.cat)
emm_theta_r.pr <- emmeans(lm_El_theta, pairwise ~ rwide.cat | pleiorate.cat)
emm_theta_r.ls <- emmeans(lm_El_theta, pairwise ~ rwide.cat | locisigma.cat)
emm_theta_pr.pc <- emmeans(lm_El_theta, pairwise ~ pleiorate.cat | rwide.cat)
emm_theta_pr.ls <- emmeans(lm_El_theta, pairwise ~ pleiorate.cat | locisigma.cat)
emm_area_d.pr
# Combine graphs
library(patchwork)
(plot_GEllipse_delmu | plot_GEllipse_pleiocov) / (plot_GEllipse_pleiorate) / (plot_GEllipse_rwide | plot_GEllipse_locisigma)
(plot_GEllipse_delmu | plot_GEllipse_pleiocov) / (plot_GEllipse_pleiorate) / (plot_GEllipse_rwide | plot_GEllipse_locisigma)
emmeans(lm_El_area, pairwise ~ delmu.cat)$contrasts
emmeans(lm_El_area, pairwise ~ pleiocov.cat)$contrasts
emm_area_d.r
emm_area_r.pr$contrasts
emm_ratio_d.r
emm_ratio_d.pr
emm_ratio_d.pc
emm_theta_d.r
emm_theta_d.r$contrasts
emm_theta_d.pc$contrasts
emm_theta_d.pr$contrasts
emm_theta_r.pr$contrasts
emm_theta_d.r$contrasts
emm_theta_d.pr$contrasts
emm_theta_r.pr$contrasts
emm_theta_r.pc$contrasts
emm_theta_r.ls$contrasts
emm_theta_d.ls$contrasts
##################################################################################################
# Import BIG data: all 1024 models - all of the below analysis works for both 256 and 1024 files #
##################################################################################################
d_null_big <- read.csv("d_null_1024.csv")
# Get rid of first useless column
d_null_big <- d_null_big[,-1]
# Load ggplot etc.
library(tidyverse)
source("src_plot.R")
source("src_G_mat.R")
d_null_het <- d_null_big[,c(1:3, 5:10, 111)]
d_null_het$pleiocov.cat <- cut(d_null_het$pleiocov, breaks = 8)
d_null_het$pleiorate.cat <- cut(d_null_het$pleiorate, breaks = 8)
d_null_het$rwide.cat <- cut(d_null_het$rwide, breaks = 8)
d_null_het$locisigma.cat <- cut(d_null_het$locisigma, breaks = 8)
d_null_het$delmu2 <- d_null_het$delmu^2 # For quadratic model
library(BBmisc) # normalise data function
d_null_het_norm <- cbind(d_null_het[c(1:3)], normalize(d_null_het[-c(1:3, 10)], method = "range"), d_null_het[10])
d_null_het_norm$seed <- factor(d_null_het_norm$seed)
library(nlme)
lm_het <- lm(H ~ (delmu.cat + pleiocov + pleiorate + locisigma + rwide)^2,
contrasts=list(delmu='contr.sum', pleiocov ='contr.sum', pleiorate ='contr.sum', locisigma. ='contr.sum', rwide ='contr.sum'),
data = d_null_het)
d_null_het[1,1:10]
lm_het <- lm(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2,
contrasts=list(delmu='contr.sum', pleiocov ='contr.sum', pleiorate ='contr.sum', locisigma. ='contr.sum', rwide ='contr.sum'),
data = d_null_het)
lm_het <- lm(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2,
data = d_null_het)
summary(lm_het)
lm_het <- lme(H ~ (delmu + pleiocov + pleiorate + locisigma + rwide)^2, random = ~1|seed , data = d_null_het)
summary(lm_het)

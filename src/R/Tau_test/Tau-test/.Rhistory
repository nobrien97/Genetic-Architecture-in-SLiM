getwd()
d_tau_means <- read.csv("out_8T_stabsel_means.csv")
d_tau_means <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/Tau_test/Output/out_8T_stabsel_means.csv")
d_tau_means <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/Tau_test/Output/out_8T_stabsel_means.csv", header = F)
d_tau_opt <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/Tau_test/Output/out_8T_stabsel_opt.csv", header = F)
View(d_tau_means)
names(d_tau_means)[1:7] <- c("gen", "seed", "modelindex", "rsd", "rwide", "delmu", "tau")
names(d_tau_means)[8:35] <-  c(paste0("pleiocov_0", 1:7), paste0("pleiocov_1", 2:7), paste0("pleiocov_2", 3:7), paste0("pleiocov_3", 4:7), paste0("pleiocov_4", 5:7), paste0("pleiocov_5", 6:7), paste0("pleiocov_6", 7))
names(d_tau_means)[36:43] <- paste0("mean", 0:7)
names(d_tau_means)[44:51] <- paste0("var", 0:7)
names(d_tau_means)[52:79] <- c(paste0("phenocov_0", 1:7), paste0("phenocov_1", 2:7), paste0("phenocov_2", 3:7), paste0("phenocov_3", 4:7), paste0("phenocov_4", 5:7), paste0("phenocov_5", 6:7), paste0("phenocov_6", 7))
names(d_tau_means)[80:107] <- c(paste0("phenocor_0", 1:7), paste0("phenocor_1", 2:7), paste0("phenocor_2", 3:7), paste0("phenocor_3", 4:7), paste0("phenocor_4", 5:7), paste0("phenocor_5", 6:7), paste0("phenocor_6", 7))
names(d_tau_means)[108] <- "H"
View(d_tau_means)
View(d_tau_opt)
names(d_tau_opt) <- c("seed", "modelindex", paste0("opt", 0:7))
View(d_tau_opt)
View(d_tau_means)
d_master <- d_tau_opt %>% left_join(d_tau_means, by = "seed")
# Join the frames together
library(dplyr)
d_master <- d_tau_opt %>% left_join(d_tau_means, by = "seed")
View(d_master)
rm(d_master)
View(d_tau_opt)
d_master <- d_tau_opt %>% left_join(d_tau_means, by = "seed")
View(d_master)
rm(d_master)
d_master <- d_tau_opt %>% right_join(d_tau_means, by = "seed")
rm(d_master)
d_tau_opt <- read.csv("Z:/Documents/GitHub/Genetic-Architecture-in-SLiM/src/Cluster_jobs/Tau_test/Output/out_8T_stabsel_opt.csv", header = F)
names(d_tau_opt) <- c("seed", "modelindex", paste0("opt", 0:7))
names(d_tau_opt) <- c("seed", "tau", paste0("opt", 0:7))
View(d_tau_opt)
d_master <- d_tau_opt %>% right_join(d_tau_means, by = "tau")
rm(d_master)
d_master <- left_join(d_tau_opt, d_tau_means, by = "tau")
d_master <- left_join(d_tau_opt[,2:10], d_tau_means, by = "tau")
View(d_master)
d_master <- right_join(d_tau_opt[,2:10], d_tau_means, by = "tau")
View(d_master)
dist(rbind(d_tau_means[,d_tau_means$gen == 50000]))
d_tau_means[1]
d_tau_means[1,]
dist(rbind(d_tau_means[,1], d_tau_opt))
d_tau_means[,d_tau_means$gen == 150000 & d_tau_means$tau == 10 & d_tau_means$seed == 167]
d_tau_means[d_tau_means$gen == 150000 & d_tau_means$tau == 10 & d_tau_means$seed == 167]
d_tau_means[,d_tau_means$gen == 150000]
d_tau_means[d_tau_means$gen == 150000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,]
d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,]
dist_ex <- d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,]
d_tau_opt[3,]
dist(rbind(dist_ex, d_tau_opt[3,]))
dist_ex <- d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,][36:43]
dist(rbind(dist_ex, d_tau_opt[3,][3:10]))
dist_ex <- as.vector(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,][36:43])
dist_ex <- c(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,][36:43])
as.matrix(dist_ex)
as.matrix(rbind(dist_ex))
as.vector(rbind(dist_ex))
(c(dist_ex))
as.numeric(dist_ex)
dist_ex <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,][36:43])
dist(rbind(dist_ex, as.numeric(d_tau_opt[3,][3:10])))
dist_ex2 <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 1000 & d_tau_means$seed == 167,][36:43])
dist(rbind(dist_ex2, as.numeric(d_tau_opt[7,][3:10])))
dist_ex3 <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 100 & d_tau_means$seed == 167,][36:43])
dist(rbind(dist_ex3, as.numeric(d_tau_opt[7,][3:10])))
dist(rbind(dist_ex3, as.numeric(d_tau_opt[6,][3:10])))
#dists <- numeric(length = length(unique(modelindex))*length(unique(seed))* length(unique(gen)))
dists <- numeric(length = 270)
d_master <- as.vector(t(d_tau_means))
# Function to convert a single line from dataframe to just the mean values
dat_to_mean <- function(dat) {
dat <- as.vector(t(dat))
means <- dat[8:35]
means
}
# Function to rearrange data into list sorted by variables
mean_gen <- function(dat) {
dat <- dplyr::arrange(dat, gen, tau, seed) # should be modelindex instead of tau in final function
dat <- dplyr::group_split(dat, gen) %>% setNames(unique(dat$gen))
dat <- lapply(dat, function(x) { dplyr::group_split(x, seed) %>% setNames(unique(x$seed))})
dat <- lapply(dat, function(x) { lapply(x, function(y) {
split(as.matrix(y), row(y))
})
})
dat <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
dat_to_mean(z)
})
})
})
dat
}
mean_gen(d_tau_means)
mean_list <- mean_gen(d_tau_means)
View(mean_list)
dist_ex <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 10 & d_tau_means$seed == 167,][36:43])
dist_ex2 <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 1000 & d_tau_means$seed == 167,][36:43])
dist_ex3 <- as.numeric(d_tau_means[d_tau_means$gen == 15000 & d_tau_means$tau == 100 & d_tau_means$seed == 167,][36:43])
dist_ex
dist_ex2
dist_ex3
d_tau_opt[6,][3:10]
View(d_tau_means)
dat_test <- arrange(d_tau_means, gen, tau, seed)
View(dat_test)
View(mean_list)
# Function to convert a single line from dataframe to just the mean values
dat_to_mean <- function(dat) {
dat <- as.vector(t(dat))
means <- dat[36:43]
means
}
mean_list <- mean_gen(d_tau_means)
View(mean_list)
d_tau_nodup <- d_tau_means[!duplicated(d_tau_means)]
d_tau_nodup <- distinct(d_tau_means)
View(d_tau_nodup)
d_tau_nodup <- d_tau_means %>% distinct()
d_tau_nodup <- d_tau_means %>% distinct(seed, gen, tau)
View(d_tau_nodup)
d_tau_nodup <- d_tau_means %>% distinct()
d_tau_nodup <- d_tau_means[duplicated(d_tau_means)]
View(d_tau_nodup)
d_tau_nodup <- d_tau_means[!duplicated(d_tau_means)]
d_tau_nodup <- d_tau_means[!duplicated(d_tau_means),]
View(d_tau_nodup)
d_tau_nodup <- d_tau_means %>% distinct()
View(d_tau_nodup)
d_tau_nodup <- d_tau_means[!duplicated(d_tau_means),]
d_tau_nodup <- d_tau_means %>% distinct(seed, gen, tau, .keep_all = T)
mean_list <- mean_gen(d_tau_means)
View(mean_list)
mean_list <- mean_gen(d_tau_nodup)
View(mean_list)
opt <- arrange(opt, tau, seed)
opt <- arrange(d_tau_opt, tau, seed)
View(opt)
rm(opt)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
split(as.matrix(x), row(x))
})
opt
}
opt_list <- opt_gen(d_tau_opt)
View(opt_list)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
split(as.matrix(x), row(x))
})
opt[,3:10]
}
opt_list <- opt_gen(d_tau_opt)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
split(as.matrix(x), row(x))[,3:10]
})
opt
}
opt_list <- opt_gen(d_tau_opt)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
x <- split(as.matrix(x), row(x))
x[,3:10]
})
opt
}
opt_list <- opt_gen(d_tau_opt)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
x <- split(as.matrix(x), row(x))
x[3:10]
})
opt
}
opt_list <- opt_gen(d_tau_opt)
View(opt_list)
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) %>% setNames(unique(opt$seed))
opt <- lapply(opt, function (x) {
x <- x[,3:10]
split(as.matrix(x), row(x))
})
opt
}
View(opt_list)
opt_list <- opt_gen(d_tau_opt)
View(opt_list)
opt[[1]][[1]]
opt_list[[1]][[1]]
opt_list[[1]][[2]]
opt_list[[1]][[3]]
opt_list[[1]][[4]]
opt_list[[2]][[1]]
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
opt_x <- match(y, x) # Get the index of the second level of the list; for use in getting the right opt
opt_y <- match(z, y) # Get the index of the third level of the list
optline <- opt[[opt_x]][[opt_y]]
dist(z, optline)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
?match
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
opt_x <- y #match(y, x) # Get the index of the second level of the list; for use in getting the right opt
opt_y <- z #match(z, y) # Get the index of the third level of the list
optline <- opt[[opt_x]][[opt_y]]
dist(z, optline)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
opt_x <- match(y, dat[[x]]) # Get the index of the second level of the list; for use in getting the right opt
opt_y <- match(z, dat[[x]][[y]]) # Get the index of the third level of the list
optline <- opt[[opt_x]][[opt_y]]
dist(z, optline)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
opt_x <- match(y, unlist(x)) # Get the index of the second level of the list; for use in getting the right opt
opt_y <- match(z, unlist(y)) # Get the index of the third level of the list
optline <- opt[[opt_x]][[opt_y]]
dist(z, optline)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
mean_list_lv1 <- mean_list[[1]]
mean_list_lv2 <- mean_list[[1]][[1]]
View(mean_list_lv1)
View(mean_list_lv2)
match(mean_list_lv1, mean_list)
match(mean_list_lv1, unlist(mean_list))
match(unlist(mean_list_lv1), unlist(mean_list))
unlist(mean_list_lv1)
match(mean_list_lv2, unlist(mean_list_lv1))
match(mean_list_lv2, mean_list_lv1)
View(mean_list)
match(mean_list_lv2, mean_list)
match(mean_list_lv2, unlist(mean_list))
match(mean_list_lv2, unlist(mean_list_lv1))
mean_list_lv2 %in% mean_list_lv1
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) # %>% setNames(unique(opt$seed)) Don't need names of seeds
opt <- lapply(opt, function (x) {
x <- x[,3:10]
split(as.matrix(x), row(x))
})
opt
}
# Function to rearrange data into list sorted by variables
mean_gen <- function(dat) {
dat <- dplyr::arrange(dat, gen, tau, seed) # should be modelindex instead of tau in final function
dat <- dplyr::group_split(dat, gen) %>% setNames(unique(dat$gen))
dat <- lapply(dat, function(x) { dplyr::group_split(x, seed) }) # %>% setNames(unique(x$seed))}) Don't need names of seeds
dat <- lapply(dat, function(x) { lapply(x, function(y) {
split(as.matrix(y), row(y))
})
})
dat <- lapply(dat, function(x) {
lapply(x, function(y) {
lapply(y, function(z) {
dat_to_mean(z)
})
})
})
dat
}
# Convert optimums into a list for easier comparison
opt_gen <- function(opt) {
opt <- dplyr::arrange(opt, tau, seed) # should be modelindex instead of tau in final function
opt <- dplyr::group_split(opt, seed) # %>% setNames(unique(opt$seed)) Don't need names of seeds
opt <- lapply(opt, function (x) {
x <- x[,3:10]
split(as.matrix(x), row(x))
})
opt
}
mean_list <- mean_gen(d_tau_nodup)
opt_list <- opt_gen(d_tau_opt)
View(mean_list)
View(opt_list)
rm(dists)
?seq_along
mean_list[[1]][[1]][1]
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(seq_along(dat), function(x) {
lapply(seq_along(dat[[x]]), function(y) {
lapply(seq_along(dat[[x]][[y]]), function(z) {
opt_x <- opt[[y]][[z]] # Get the index of the second level of the list; for use in getting the right opt
dist(dat[[x]][[y]][z], opt_x)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(seq_along(dat), function(x) {
lapply(seq_along(dat[[x]]), function(y) {
lapply(seq_along(dat[[x]][[y]]), function(z) {
opt_x <- opt[[y]][[z]] # Get the index of the second level of the list; for use in getting the right opt
opt_x
dat[[x]][[y]][[z]]
#dist(dat[[x]][[y]][z], opt_x)
})
})
})
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
View(euc_test)
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(seq_along(dat), function(x) {
lapply(seq_along(dat[[x]]), function(y) {
lapply(seq_along(dat[[x]][[y]]), function(z) {
opt_x <- opt[[y]][[z]] # Get the index of the second level of the list; for use in getting the right opt
opt_x
dat[[x]][[y]][[z]]
#dist(dat[[x]][[y]][z], opt_x)
})
})
})
dists
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
View(euc_test)
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(seq_along(dat), function(x) {
lapply(seq_along(dat[[x]]), function(y) {
lapply(seq_along(dat[[x]][[y]]), function(z) {
opt_x <- opt[[y]][[z]] # Get the index of the second level of the list; for use in getting the right opt
dist(rbind(dat[[x]][[y]][z], opt_x))
})
})
})
dists
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
mean_list_lv1 <- mean_list[[1]][[1]]
mean_list_lv2 <- mean_list[[1]][[1]][[1]]
opt_list[[1]][[1]]
mean_list[[1]][[1]][[1]]
euc_dist <- function(dat, opt) {
dat <- mean_gen(dat)
opt <- opt_gen(opt)
dists <- lapply(seq_along(dat), function(x) {
lapply(seq_along(dat[[x]]), function(y) {
lapply(seq_along(dat[[x]][[y]]), function(z) {
opt_x <- as.numeric(opt[[y]][[z]]) # Get the index of the second level of the list; for use in getting the right opt
dist_x <- as.numeric(dat[[x]][[y]][[z]])
dist(rbind(dist_x, opt_x))
})
})
})
dists
}
euc_test <- euc_dist(d_tau_nodup, d_tau_opt)
View(euc_test)
View(euc_test)

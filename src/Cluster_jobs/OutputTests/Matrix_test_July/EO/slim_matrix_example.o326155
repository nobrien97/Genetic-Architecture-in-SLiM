
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##############################################################################################################
> #  Simple test script for including two traits, with arguments coming from latin square, for use on cluster
> ##############################################################################################################
> 
> 
> #  Parallel script modified from SLiM-Extras example R script, info at
> #  the SLiM-Extras repository at https://github.com/MesserLab/SLiM-Extras.
> 
> 
> TMPDIR <- Sys.getenv('TMPDIR')
> USER <- Sys.getenv('USER')
> PBSIND <- as.numeric(Sys.getenv("PBS_ARRAY_INDEX"))
> 
> # Parallelisation libraries 
> 
> library(foreach)
> library(doParallel)
> library(future)
> 
> 
> # Seed generation - 100 seeds from the total range of possible values in a 64 bit signed integer
> 
> # rsample <- as.character(runif(100, 1, (2^62 - 1)))
> 
> 
> # Load LHS samples - Split into 20 parts, so each node does 5 each (500 total runs/node)
> 
> rsample <- read.csv(paste0("/home/",USER,"/SLiM/Scripts/seeds_het.csv"), header = F)
> rsample <- as.character(as.vector(t(rsample)))
> 
> # - Multinode parallelism: Use the array index to tell us what range in lscombos to evaluate: from (index*5) -4: index*5
> 
> cl <- makeCluster(future::availableCores())
> registerDoParallel(cl)
> 
> #Run SLiM, defining parameter sets according to LHS in command line - j is from (PBSIND*5 )-4 to PBSIND*5
> 
> 
> # Parameters:
> # Ne, rregion, rwide, delmu, nloci (?), locisigma
> 
> Ne <- c(1000)
> delmu <- c(0.0, 1.0)
> 
> 
> foreach(i=rsample) %:%
+   foreach(j=Ne) %:% 
+       foreach(k=delmu)  %dopar%   {
+     # Use string manipulation functions to configure the command line args, feeding from a data frame of latin square combinations
+     # then run SLiM with system(),
+         if (k = 0.0){
  adding: tmpdir/pbs.326155.tinmgr2/matrices/ (stored 0%)
  adding: tmpdir/pbs.326155.tinmgr2/matrices/model0/ (stored 0%)
  adding: tmpdir/pbs.326155.tinmgr2/matrices/model1/ (stored 0%)
